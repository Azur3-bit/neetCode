100 50 150 10 60 125 200 55 130
'


void iteative_inorder_traversal(treenode * rooti) {
	if (rooti == nullptr)
		return;


	stack<treenode *> leftStack {};
	stack<pair<treenode *, treenode *>> rightStack {};

	treenode * root = rooti;

	leftStack.push(root);

	while (!leftStack.empty()) {

		if (root->left == nullptr) {
			leftStack.push(root);
		}
		if (root->right != nullptr) {
			rightStack.push(make_pair(root, root->right));
		}

		if (root->left != nullptr)
			root = root->left;

		break;
	}

	dbg(leftStack);
	dbg(rightStack);
}

void solve() {
	vector<int> nums {};
	cin >> nums;
	treenode * root = nullptr;
	bst_vector(root, nums);

	cout << " bst_traversal_inOrder : ";
	bst_traversal_inOrder(root);
	cout << "\n";

	iteative_inorder_traversal(root);
}'
