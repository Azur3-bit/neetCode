void ganda_helper(treenode *root, int row, int col, map<int, map<int, vector<int>>> &ans) {
    if (root == nullptr)
        return;

    auto it_col = ans.find(col);

    if (it_col == ans.end()) {
        map<int, vector<int>> temp {};
        vector<int> temp_vec = temp[row];
        temp_vec.push_back(root->val);
        temp[row] = temp_vec;
        ans[col] = temp;

    }
    else {
        map<int, vector<int>> &temp = it_col->second;
        // check if the row is present in the inner hashmap
        auto it = temp.find(row);
        if (it == temp.end()) {
            temp[row] = {root->val}; // might have to change
        }
        else {
            it->second.push_back(root->val);
        }
        // add the hashmap to the ans
        ans[col] = temp;
    }

    dbg(ans);


    ganda_helper(root->left, row + 1, col - 1, ans);
    ganda_helper(root->right, row + 1, col + 1, ans);
}
